
R version 4.0.2 (2020-06-22) -- "Taking Off Again"
Copyright (C) 2020 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> 
> ## package: haplo.stats
> ## test script: haplo.glm
> 
> ## settings
> verbose=TRUE
> 
> require(haplo.stats)
Loading required package: haplo.stats
Loading required package: arsenal
> 
> Sys.setlocale("LC_ALL", "C")
[1] "LC_CTYPE=C;LC_NUMERIC=C;LC_TIME=C;LC_COLLATE=C;LC_MONETARY=C;LC_MESSAGES=en_US.UTF-8;LC_PAPER=en_US.UTF-8;LC_NAME=C;LC_ADDRESS=C;LC_TELEPHONE=C;LC_MEASUREMENT=en_US.UTF-8;LC_IDENTIFICATION=C"
> Sys.getlocale()
[1] "LC_CTYPE=C;LC_NUMERIC=C;LC_TIME=C;LC_COLLATE=C;LC_MONETARY=C;LC_MESSAGES=en_US.UTF-8;LC_PAPER=en_US.UTF-8;LC_NAME=C;LC_ADDRESS=C;LC_TELEPHONE=C;LC_MEASUREMENT=en_US.UTF-8;LC_IDENTIFICATION=C"
> 
> ## this is a dataset borrowed from a haplo.stats user
> # it has problems with recessive trait, but runs fast on all examples
> 
> "data.test.glm" <- 
+ structure(.Data = list(c(1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,	1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
+ 	1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,	1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
+ 	1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 0.,0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,	0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
+ 	0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,	0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
+ 	0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,	0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
+ 	0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,	0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
+ 	0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.)
+ , c(1., 2., 1., 2., 1., 1., 2., 1., 1., 2., 1., 2., 1., 1., 1., 1., 1., 2., 2.,	1., 1., 1., 2., 2., 1., 1., 1., 1., 1., 2., 1., 1., 1., 1., 2., 2.,2., 2., 2., 1., 1., 1., 1., 1., 2., 2., 1., 1., 1., 1., 1., 1., 1.,1., 1., 1., 1., 1., 2., 2., 1., 1., 1., 1., 1., 1., 2., 2., 1., 1.,
+ 	1., 1., 2., 1., 2., 2., 1., 2., 1., 2., 1., 2., 2., 1., 2., 2., 2.,1., 1., 1., 1., 1., 2., 1., 2., 1., 1., 2., 1., 1., 1., 1., 1., 2.,	1., 1., 2., 2., 1., 2., 1., 1., 1., 2., 1., 2., 1., 2., 2., 1., 1.,1., 1., 2., 1., 2., 1., 2., 2., 1., 2., 1., 1., 2., 2., 1., 2., 2.,
+ 	2., 1., 2., 2., 1., 2., 2., 1., 2., 1., 1., 2., 1., 1., 1., 1., 2.,2., 1., 1., 2., 1., 1., 2., 1., 1., 1., 1., 1., 1., 2., 1., 1., 1.,	1., 1., 1., 2., 1., 1., 1., 1., 2., 1., 2., 1., 1., 1., 1., 2., 2.,1., 2., 1., 2., 2., 1., 2., 1., 1., 1., 2., 2., 1., 1., 1., 1., 2.,
+ 	1., 1., 1., 1., 2., 2., 1., 2., 2., 2., 1., 1., 1., 2., 1., 1., 2.,1., 1., 1., 1., 1., 1., 1., 1., 2., 1., 2., 2., 2., 1., 1., 1., 2.,	1., 2., 1., 2., 1., 2., 1., 2., 1., 1., 1., 1., 1., 1., 2., 2., 1.,2., 2., 2., 1., 1., 2., 1., 1., 1., 1., 1., 2., 2., 1., 1., 1., 2.,
+ 	1., 1., 1., 2., 1., 1., 2., 1., 1., 1., 1., 2., 2., 1., 2., 1., 2.,1., 1., 1., 2., 1., 1., 1., 1., 2., 2., 1., 1., 2., 1., 2., 2., 1.,	1., 2., 1., 1., 1., 1., 1., 2., 1., 2., 1., 1., 2., 1., 2., 2., 2.,1., 1., 2., 1., 2., 1., 1., 1., 1., 1., 1., 2., 2., 1., 1., 2., 1.,
+ 	1., 1., 1., 2., 2., 2., 1., 1., 1., 1., 2., 1., 2., 2., 2., 2., 2.,1., 1., 2., 1., 2., 1., 2., 1., 2., 1., 1., 1., 1., 1., 1., 2., 2.,	1., 2., 2., 1., 2., 2., 2., 1., 2., 1., 2., 2., 2., 1., 1., 1., 2.,1., 1., 2., 2., 2., 2., 1., 2., 2., 1., 2., 2., 1., 2., 1., 1., 1.,
+ 	2., 1., 2., 2., 1., 2., 1., 1., 1., 1., 1., 1., 1.),
+             c(1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,1., 2., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
+ 	1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 2.,	1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 2., 1., 1., 1., 1., 1., 1.,1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
+ 	1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 1., 0.,0., 1., 1., 1., 1., 1., 1., 0., 1., 1., 1., 1., 0., 1., 1., 1., 0.,	1., 1., 0., 1., 1., 1., 1., 2., 1., 1., 1., 1., 1., 1., 1., 1., 0.,1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
+ 	1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,1., 1., 1., 1., 2., 1., 1., 1., 1., 0., 1., 1., 1., 1., 1., 1., 1.,	1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 2., 1., 1., 1., 1., 1.,1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
+ 	1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,	1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
+ 	1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,	1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
+ 	1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,0., 1., 1., 1., 1., 1., 0., 1., 1., 1., 1., 1., 1.)
+ , c(1., 1., 1., 1., 1., 1., 1., 2., 1., 1., 2., 1., 2., 1., 2., 1., 1., 1., 1.,	1., 2., 1., 2., 1., 2., 2., 1., 1., 1., 1., 1., 1., 2., 1., 1., 2.,	1., 1., 1., 1., 1., 2., 1., 1., 1., 1., 1., 2., 1., 1., 2., 1., 1.,2., 2., 1., 1., 1., 1., 1., 1., 1., 1., 2., 2., 1., 2., 1., 1., 1.,
+ 	1., 1., 2., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 2., 1., 2.,1., 2., 2., 1., 1., 1., 2., 2., 1., 1., 2., 1., 2., 2., 1., 1., 1.,	1., 1., 1., 2., 1., 1., 2., 1., 2., 1., 2., 1., 1., 1., 1., 2., 1.,2., 1., 1., 1., 1., 2., 1., 1., 2., 1., 1., 1., 1., 1., 0., 1., 0.,
+ 	0., 1., 1., 1., 1., 2., 1., 0., 1., 2., 1., 1., 0., 1., 1., 1., 0.,1., 2., 0., 1., 1., 1., 1., 2., 1., 1., 1., 1., 1., 1., 2., 1., 0.,	1., 1., 1., 1., 1., 2., 1., 2., 1., 2., 1., 1., 1., 1., 1., 2., 1.,1., 1., 1., 1., 1., 1., 1., 1., 2., 1., 1., 1., 1., 1., 1., 1., 2.,
+ 	1., 1., 1., 1., 2., 2., 1., 1., 2., 0., 2., 2., 1., 1., 2., 1., 1.,1., 1., 2., 1., 1., 1., 1., 2., 1., 1., 1., 2., 1., 1., 2., 1., 1.,	1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 2., 1., 1.,1., 1., 1., 1., 2., 2., 1., 1., 2., 1., 1., 2., 1., 1., 2., 2., 2.,
+ 	1., 2., 1., 1., 1., 2., 2., 1., 1., 1., 2., 1., 1., 1., 1., 2., 1.,1., 1., 1., 1., 1., 2., 2., 2., 2., 1., 1., 1., 1., 1., 2., 1., 1.,	1., 2., 2., 1., 1., 1., 1., 1., 1., 2., 2., 2., 1., 1., 1., 1., 2.,1., 2., 1., 2., 1., 1., 2., 1., 1., 1., 1., 1., 1., 1., 1., 2., 2.,
+ 	2., 2., 2., 2., 1., 1., 2., 1., 1., 1., 2., 2., 1., 1., 1., 2., 1.,1., 1., 1., 1., 1., 1., 2., 1., 1., 1., 2., 1., 1., 1., 1., 1., 2.,	1., 1., 2., 1., 2., 1., 1., 2., 1., 1., 2., 1., 1., 1., 1., 1., 1.,1., 1., 2., 1., 2., 2., 2., 2., 1., 1., 1., 1., 1., 2., 1., 1., 1.,
+ 	0., 2., 1., 1., 1., 1., 0., 1., 1., 1., 2., 2., 2.)
+             , c(1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,2., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 2., 1., 1., 1., 1.,1., 1., 1., 1., 1., 1., 2., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
+ 	1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,1., 1., 1., 1., 2., 1., 1., 1., 1., 2., 1., 1., 1., 1., 1., 1., 1.,	1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 2., 1., 1., 1., 1., 2.,1., 1., 1., 1., 1., 1., 1., 0., 1., 1., 1., 1., 2., 1., 1., 1., 2.,
+ 	1., 2., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,0., 1., 1., 1., 1., 1., 1., 0., 1., 1., 1., 2., 0., 0., 1., 1., 0.,	2., 1., 0., 1., 1., 1., 1., 1., 0., 1., 1., 2., 1., 1., 1., 2., 1.,2., 1., 2., 1., 0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 2., 2., 2.,
+ 	1., 1., 2., 2., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 2., 1., 1.,1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 1., 1., 2., 2., 1., 1., 1.,	1., 1., 1., 1., 0., 1., 2., 1., 1., 1., 1., 1., 2., 1., 1., 1., 1.,1., 2., 1., 1., 1., 2., 1., 2., 1., 1., 1., 2., 1., 1., 1., 0., 1.,
+ 	2., 2., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 2., 1., 1., 1., 1.,1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 2., 1., 2., 1., 1., 1.,	2., 2., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 2.,1., 1., 1., 1., 1., 2., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
+ 	2., 1., 1., 1., 1., 1., 1., 2., 1., 1., 1., 1., 1., 1., 2., 1., 1.,1., 1., 1., 1., 2., 1., 1., 2., 1., 1., 1., 1., 1., 1., 1., 1., 1.,	1., 1., 1., 2., 1., 1., 1., 1., 1., 2., 1., 2., 1., 1., 1., 1., 1.,2., 1., 1., 2., 1., 1., 2., 1., 1., 1., 1., 1., 2., 1., 1., 1., 1.,
+ 	1., 2., 1., 2., 1., 1., 1., 1., 1., 2., 1., 1., 1., 1., 1., 1., 1.,0., 1., 1., 2., 1., 1., 0., 2., 1., 1., 1., 1., 1.)
+ , c(1., 2., 2., 2., 1., 1., 2., 2., 1., 2., 1., 1., 1., 1., 1., 2., 1., 2., 1.,	2., 1., 1., 1., 2., 1., 1., 1., 1., 1., 2., 2., 2., 1., 2., 2., 1.,2., 1., 1., 1., 1., 1., 2., 2., 2., 2., 2., 1., 1., 2., 2., 1., 1.,
+ 	2., 1., 1., 1., 2., 2., 1., 2., 1., 1., 2., 1., 2., 1., 2., 1., 1.,2., 2., 1., 1., 2., 2., 1., 2., 2., 2., 2., 1., 2., 2., 1., 1., 1.,	1., 1., 1., 2., 1., 1., 2., 1., 1., 2., 1., 2., 1., 1., 1., 1., 2.,2., 1., 2., 2., 1., 1., 2., 0., 2., 2., 2., 2., 2., 1., 2., 1., 2.,
+ 	1., 2., 1., 2., 2., 2., 1., 2., 1., 2., 1., 2., 1., 1., 1., 1., 2.,0., 1., 1., 2., 2., 2., 2., 0., 2., 2., 1., 2., 0., 0., 1., 2., 0.,	2., 1., 0., 1., 2., 1., 1., 1., 0., 2., 2., 2., 1., 1., 2., 2., 1.,2., 2., 2., 1., 0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 2., 2., 2.,
+ 	1., 1., 2., 2., 2., 1., 1., 2., 2., 1., 2., 2., 2., 2., 2., 2., 2.,1., 2., 2., 1., 1., 1., 1., 1., 2., 0., 2., 2., 2., 2., 2., 1., 2.,	1., 2., 2., 1., 0., 1., 2., 2., 2., 2., 1., 1., 2., 2., 1., 2., 2.,2., 2., 1., 2., 2., 2., 2., 2., 2., 1., 2., 2., 2., 1., 1., 0., 2.,
+ 	2., 2., 2., 2., 1., 1., 2., 1., 1., 2., 2., 1., 2., 2., 1., 1., 2.,1., 1., 1., 2., 2., 2., 1., 1., 1., 2., 2., 2., 2., 2., 2., 1., 1.,	2., 2., 1., 2., 1., 1., 2., 1., 2., 1., 2., 1., 1., 1., 1., 2., 2.,2., 2., 2., 2., 2., 2., 1., 1., 1., 1., 1., 1., 2., 1., 1., 2., 1.,
+ 	2., 1., 1., 1., 2., 2., 2., 2., 2., 1., 2., 2., 2., 2., 2., 2., 1.,1., 1., 1., 1., 2., 1., 1., 2., 1., 1., 1., 1., 2., 1., 2., 2., 1.,	1., 2., 2., 2., 2., 2., 1., 1., 2., 2., 2., 2., 2., 1., 2., 2., 1.,2., 2., 1., 2., 2., 2., 2., 2., 2., 1., 1., 1., 2., 1., 1., 2., 1.,
+ 	2., 2., 2., 2., 1., 1., 2., 1., 2., 2., 1., 2., 2., 2., 1., 2., 1.,0., 2., 2., 2., 2., 2., 0., 2., 1., 2., 1., 1., 2.)
+ , c(2., 2., 1., 1., 2., 2., 1., 1., 2., 1., 1., 2., 2., 2., 1., 1., 2., 1., 2.,	1., 1., 2., 2., 1., 2., 2., 2., 2., 2., 2., 1., 1., 2., 1., 1., 2.,	1., 2., 2., 2., 2., 1., 1., 1., 1., 1., 1., 1., 2., 1., 1., 2., 2.,2., 2., 2., 2., 1., 1., 2., 1., 2., 2., 1., 2., 1., 2., 1., 1., 2.,
+ 	1., 1., 1., 2., 1., 1., 2., 2., 1., 1., 1., 2., 1., 1., 1., 2., 1.,2., 1., 1., 1., 2., 2., 1., 1., 2., 1., 2., 1., 2., 2., 2., 2., 1.,	1., 2., 1., 1., 2., 2., 2., 2., 1., 1., 1., 1., 1., 2., 1., 2., 1.,2., 1., 2., 1., 1., 1., 2., 1., 2., 1., 2., 1., 2., 2., 1., 2., 1.,
+ 	2., 2., 2., 1., 1., 1., 1., 1., 1., 1., 1., 1., 2., 1., 2., 1., 1.,2., 1., 2., 2., 1., 2., 2., 1., 2., 1., 1., 1., 2., 2., 1., 1., 2.,	1., 2., 1., 2., 1., 2., 2., 2., 2., 2., 2., 2., 2., 2., 1., 1., 1.,2., 2., 1., 1., 1., 2., 2., 1., 1., 2., 2., 1., 2., 1., 1., 2., 1.,
+ 	2., 1., 1., 2., 1., 1., 2., 2., 1., 1., 1., 1., 1., 1., 1., 1., 1.,2., 1., 1., 2., 1., 2., 1., 1., 1., 1., 1., 2., 1., 1., 2., 1., 1.,	1., 1., 2., 1., 1., 1., 1., 1., 1., 2., 1., 1., 2., 2., 2., 1., 2.,1., 1., 1., 1., 1., 2., 1., 2., 2., 1., 1., 2., 1., 1., 2., 2., 1.,
+ 	2., 2., 2., 1., 1., 1., 2., 2., 1., 1., 1., 1., 1., 1., 1., 2., 2.,1., 1., 2., 1., 2., 2., 1., 2., 1., 2., 2., 2., 2., 2., 2., 1., 1.,	1., 1., 1., 2., 1., 1., 2., 2., 2., 2., 1., 1., 2., 2., 2., 2., 1.,1., 2., 2., 1., 2., 1., 1., 1., 1., 2., 1., 1., 1., 2., 1., 1., 1.,
+ 	1., 2., 2., 1., 1., 2., 2., 1., 2., 2., 1., 1., 1., 2., 1., 1., 2.,2., 1., 1., 1., 1., 1., 2., 2., 1., 1., 1., 1., 1., 2., 1., 1., 1.,	2., 1., 2., 1., 1., 1., 1., 1., 1., 2., 1., 2., 1., 1., 2., 1., 2.,1., 1., 1., 1., 1., 2., 1., 1., 1., 2., 2., 1., 1., 1., 2., 1., 2.,
+ 	1., 1., 1., 1., 1., 1., 2., 1., 2., 1., 1., 2., 1.)
+ , c(2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2.,	1., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 1., 2., 2., 2., 2.,2., 2., 2., 2., 2., 2., 1., 2., 2., 2., 2., 2., 2., 2., 1., 2., 2.,2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2.,
+ 	2., 2., 2., 2., 1., 2., 2., 2., 2., 1., 2., 2., 2., 2., 2., 2., 2.,2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 1.,	2., 2., 2., 2., 2., 2., 2., 2., 1., 2., 1., 2., 1., 2., 2., 2., 1.,2., 1., 2., 2., 2., 1., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2.,
+ 	2., 2., 2., 2., 2., 2., 2., 1., 2., 2., 2., 1., 2., 1., 2., 2., 2.,2., 2., 2., 2., 2., 2., 2., 1., 2., 2., 1., 2., 2., 2., 2., 1., 2.,	1., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 1., 2., 1.,2., 2., 2., 1., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 1., 2., 2.,
+ 	2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 1., 1., 2., 2., 2.,2., 2., 1., 2., 2., 2., 2., 2., 2., 2., 2., 2., 1., 2., 2., 2., 2.,	2., 2., 2., 2., 1., 1., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2.,1., 1., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 1., 2., 2., 2., 1.,
+ 	2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 1., 2., 2., 2., 2., 2.,2., 2., 2., 2., 2., 2., 2., 2., 1., 2., 2., 2., 2., 2., 2., 2., 2.,	2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2.,1., 2., 2., 2., 2., 2., 2., 1., 2., 2., 2., 2., 2., 2., 1., 2., 2.,
+ 	1., 2., 2., 2., 1., 2., 2., 1., 2., 2., 2., 2., 2., 2., 2., 1., 2.,2., 2., 2., 1., 2., 2., 2., 2., 2., 2., 1., 2., 2., 2., 2., 2., 2.,	2., 2., 2., 2., 1., 2., 2., 2., 2., 2., 2., 2., 1., 2., 2., 2., 2.,2., 1., 2., 2., 1., 2., 2., 2., 2., 2., 2., 2., 2., 1., 2., 2., 2.,
+ 	1., 2., 2., 1., 2., 2., 2., 1., 2., 2., 1., 2., 2.))
+ , names = c("y3", "sex3", "V19", "V20", "V29", "V30", "V35", "V36")
+ , row.names = c("1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14","15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26","27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38",
+ 	"39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50",	"51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62",	"63", "64", "65", "66", "67", "68", "69", "70", "71", "72", "73", "74",
+ 	"75", "76", "77", "78", "79", "80", "81", "82", "83", "84", "85", "86",	"87", "88", "89", "90", "91", "92", "93", "94", "95", "96", "97", "98",	"99", "100", "101", "102", "103", "104", "105", "106", "107", "108",
+ 	"109", "110", "111", "112", "113", "114", "115", "116", "117", "118","119", "120", "121", "122", "123", "124", "125", "126", "127", "128",	"129", "130", "131", "132", "133", "134", "135", "136", "137", "138",
+ 	"139", "140", "141", "142", "143", "144", "145", "146", "147", "148","149", "150", "151", "152", "153", "154", "155", "156", "157", "158","159", "160", "161", "162", "163", "164", "165", "166", "167", "168",
+ 	"169", "170", "171", "172", "173", "174", "175", "176", "177", "178","179", "180", "181", "182", "183", "184", "185", "186", "187", "188","189", "190", "191", "192", "193", "194", "195", "196", "197", "198",
+ 	"199", "200", "201", "202", "203", "204", "205", "206", "207", "208","209", "210", "211", "212", "213", "214", "215", "216", "217", "218","219", "220", "221", "222", "223", "224", "225", "226", "227", "228",
+ 	"229", "230", "231", "232", "233", "234", "235", "236", "237", "238","239", "240", "241", "242", "243", "244", "245", "246", "247", "248","249", "250", "251", "252", "253", "254", "255", "256", "257", "258",
+ 	"259", "260", "261", "262", "263", "264", "265", "266", "267", "268","269", "270", "271", "272", "273", "274", "275", "276", "277", "278","279", "280", "281", "282", "283", "284", "285", "286", "287", "288",
+ 	"289", "290", "291", "292", "293", "294", "295", "296", "297", "298","299", "300", "301", "302", "303", "304", "305", "306", "307", "308","309", "310", "311", "312", "313", "314", "315", "316", "317", "318",
+ 	"319", "320", "321", "322", "323", "324", "325", "326", "327", "328","329", "330", "331", "332", "333", "334", "335", "336", "337", "338","339", "340", "341", "342", "343", "344", "345", "346", "347", "348",
+ 	"349", "350", "351", "352", "353", "354", "355", "356", "357", "358","359", "360", "361", "362", "363", "364", "365", "366", "367", "368","369", "370", "371", "372", "373", "374", "375", "376", "377", "378",
+ 	"379", "380", "381", "382", "383", "384", "385", "386", "387", "388","389", "390", "391", "392", "393", "394", "395", "396", "397", "398","399", "400", "401", "402", "403", "404", "405", "406", "407", "408",
+ 	"409", "410", "411", "412", "413", "414", "415", "416", "417", "418","419", "420", "421", "422", "423"), class = "data.frame")
> 
> 
>   if(verbose) cat("setting up data...\n")
setting up data...
>   
>   # prepare a short example dataset, labaled as '3' 
> # ht3 <- source("dump.ht3.s"), this is now at top of file
>   geno3 <- data.test.glm[,-(1:2)]
>   sex3 <- data.test.glm$sex
>   y3 <- data.test.glm$y3
>   set.seed(10)
>   rgaus3 <- ifelse(y3==1, rnorm(423, .5, 1), rnorm(423))
>   
>   label3<-c("M1","M2","M3")
>   geno3<-setupGeno(geno3, miss.val=c(0,NA))
>   my.data3<-data.frame(geno3=geno3, sex3=sex3, y3=y3,
+                        gaus3=rgaus3, gaus3.100=rgaus3*100)
> 
>   
>   # use freq.min as a guide for choosing minimum hap frequency
>   freq.min3 <- 5/(2*nrow(geno3))
> 
>   
>   # prepare the hla dataset,
>      # runs a lot longer, and MS alleles don't all start w/ 1, 2...
>   label <-c("DQB","DRB","B")
> 
>   data(hla.demo)
>   
>   y <- hla.demo$resp
>   y.bin <- 1*(hla.demo$resp.cat=="low")
> #  y.bin[2] <- NA
>   geno <- as.matrix(hla.demo[,c(17,18,21:24)])
> #  geno[1,] <- rep(NA, 6)  
>   geno <- setupGeno(geno, miss.val=c(0,NA))
> 
>   # geno now has an attribute 'unique.alleles' which must be passed to
>   # haplo.glm as allele.lev=attributes(geno)$unique.alleles, see below
> 
>   my.data <- data.frame(geno=geno, age=hla.demo$age, male=hla.demo$male,
+                       y=y, y.bin=y.bin)
> 
>   seed <- c(17, 53, 1, 40, 37, 0, 62, 56, 5, 52, 12, 1)
> 
>   if(verbose) cat("regular haplo.glm, additive genetic trait, and \n")
regular haplo.glm, additive genetic trait, and 
>   set.seed(seed)
>   fit3.add <- haplo.glm(y3~geno3, family=binomial,na.action="na.geno.keep",
+                data=my.data3, locus.label=label3, miss.val = c(0, NA),
+                method = "glm.fit", model = FALSE, x = FALSE, y = TRUE, contrasts = NULL,
+                control = haplo.glm.control(haplo.freq.min=freq.min3, haplo.effect="add",
+                  haplo.base = NULL, sum.rare.min = 0.001,
+                  haplo.min.info = 0.001,keep.rare.haplo = TRUE, 
+                  glm.c = glm.control(maxit = 500), em.c = haplo.em.control()))
> 
>  
>   if(verbose) cat("binomial w/ dominant trait with gender\n")
binomial w/ dominant trait with gender
>   set.seed(seed)
>   fit3.dom<-haplo.glm(y3~geno3, family=binomial, na.action="na.geno.keep",
+                     data=my.data3, locus.label=label3, control =
+                     haplo.glm.control(haplo.effect="dominant", haplo.min.count=8))
>   set.seed(seed)
>   fit3.dom.rare<-haplo.glm(y3~geno3, family=binomial, na.action="na.geno.keep",
+                     data=my.data3, locus.label=label3, control =
+                     haplo.glm.control(haplo.base=2,haplo.effect="dominant", haplo.freq.min=.32))
> 
>   if(verbose) cat("binomial with recessive trait\n")
binomial with recessive trait
>   set.seed(seed)
>   fit3.rec<-haplo.glm(y3~geno3, family=binomial, na.action="na.geno.keep",
+                     data=my.data3, locus.label=label3,
+                     control = haplo.glm.control(haplo.min.count=8,
+                                       haplo.effect="recessive"))
There were 14 warnings (use warnings() to see them)
> 
> 
> if(verbose) cat("random gaussian, variance 1 and 100^2 \n")
random gaussian, variance 1 and 100^2 
>   set.seed(seed)
>   fit3.gaus <- haplo.glm(gaus3 ~ geno3, family=gaussian, na.action="na.geno.keep",
+                     data=my.data3, locus.label=label3,
+                     control = haplo.glm.control(haplo.min.count=8))
> 
>   set.seed(seed)
>   # for version 1.3.9 and later, use the haplo.glm.q in /Haplo/Test/GlmSE/
>   fit3.gaus100 <- haplo.glm(gaus3.100 ~ geno3, family=gaussian, na.action="na.geno.keep",
+                     data=my.data3, locus.label=label3,
+                     control = haplo.glm.control(haplo.min.count=8))
>   
>   
> if(verbose) cat("fit a binary trait\n")
fit a binary trait
> set.seed(seed)
> fit.hla.bin <- haplo.glm(y.bin ~ male + geno, family = binomial,
+                  na.action="na.geno.keep", data=my.data, locus.label=label,
+                  control = haplo.glm.control(haplo.min.count=8))
> 
> y.bin <- 1*(hla.demo$resp.cat=="low")
> y.bin[2] <- NA
> geno.hla <- as.matrix(hla.demo[,c(17,18,21:24)])
> geno.hla[2,5] <- 2
> geno.hla[3,] <- rep(NA, 6)
> geno.hla <- setupGeno(geno.hla, miss.val=c(0,NA))
> 
> my.hla <- data.frame(geno.hla=geno.hla, age=hla.demo$age, male=hla.demo$male,
+                      y=y, y.bin=y.bin)
> 
> set.seed(seed)
> fit.hla.miss <- haplo.glm(y.bin ~ male + geno.hla, family = binomial,
+                      na.action="na.geno.keep",
+                      data=my.hla, locus.label=label,
+                      control = haplo.glm.control(haplo.min.count=8))
>   
> if(verbose) cat(" gaussian with covariates, additive\n")
 gaussian with covariates, additive
> 
> set.seed(seed)
> fit.hla.gaus.gender <- haplo.glm(y ~ male + geno, family = gaussian,
+                  na.action="na.geno.keep",
+                  data=my.data, locus.label=label,
+                  control = haplo.glm.control(haplo.min.count=5))
> 
> if(verbose) cat("gaussian with covariate, multiplicative\n")
gaussian with covariate, multiplicative
> set.seed(seed)
> fit.hla.gaus.inter <- haplo.glm(y ~ male * geno, family = gaussian,
+                    na.action="na.geno.keep", data=my.data, locus.label=label,
+                    control = haplo.glm.control(haplo.freq.min = 0.02))
>   
> if(verbose) cat("SNAP data with resp and resp with added variance\n")
SNAP data with resp and resp with added variance
>    snapDF <- read.table("snapData.csv",header=TRUE, sep=",", stringsAsFactors=FALSE)
> 
>    geno.rec <- setupGeno(snapDF[,-c(1:9)])
>    snap.data <- data.frame(resp=hla.demo$resp, respvar=hla.demo$resp*100, geno=geno.rec)
> 
>    set.seed(seed)
>    fit.resp.hla <- haplo.glm(resp~geno, trait.type="gaussian",data=snap.data)
> 
>    set.seed(seed)
>    fit.respvar.hla <- haplo.glm(respvar~geno, trait.type="gaussian",data=snap.data)
>   
> 
> 
>   print.haplo.glm(fit3.add,print.all.haplo=TRUE, digits=4)

Call:  haplo.glm(formula = y3 ~ geno3, family = binomial, data = my.data3, 
    na.action = "na.geno.keep", locus.label = label3, control = haplo.glm.control(haplo.freq.min = freq.min3, 
        haplo.effect = "add", haplo.base = NULL, sum.rare.min = 0.001, 
        haplo.min.info = 0.001, keep.rare.haplo = TRUE, glm.c = glm.control(maxit = 500), 
        em.c = haplo.em.control()), method = "glm.fit", model = FALSE, 
    x = FALSE, y = TRUE, contrasts = NULL, miss.val = c(0, NA))

Coefficients:
(Intercept)      geno3.1      geno3.3      geno3.4      geno3.5      geno3.6  
   -0.33411     -1.97279     -0.39084     -1.40631     -0.06855     -0.29182  
 geno3.rare  
    0.65031  

Haplotypes:
           M1 M2 M3 hap.freq
geno3.1     1  1  1 0.016314
geno3.3     1  2  1 0.284807
geno3.4     1  2  2 0.053316
geno3.5     2  1  1 0.053489
geno3.6     2  1  2 0.086402
geno3.rare  *  *  * 0.002671
haplo.base  1  1  2 0.503002

Degrees of Freedom:  422 Total (i.e. Null);  416 Residual

     Null Deviance:  529.8 
 Residual Deviance:  508.4 
               AIC:  520.4 

>   print.haplo.glm(fit3.dom, print.all.haplo=FALSE, digits=5)

Call:  haplo.glm(formula = y3 ~ geno3, family = binomial, data = my.data3, 
    na.action = "na.geno.keep", locus.label = label3, control = haplo.glm.control(haplo.effect = "dominant", 
        haplo.min.count = 8))

Coefficients:
(Intercept)      geno3.1      geno3.3      geno3.4      geno3.5      geno3.6  
  -0.351472    -1.973446    -0.449952    -1.417060     0.010317    -0.300943  
 geno3.rare  
   0.722029  

Haplotypes:
           M1 M2 M3  hap.freq
geno3.1     1  1  1 0.0163612
geno3.3     1  2  1 0.2848460
geno3.4     1  2  2 0.0531700
geno3.5     2  1  1 0.0534028
geno3.6     2  1  2 0.0864446
geno3.rare  *  *  * 0.0027118
haplo.base  1  1  2 0.5030637

Degrees of Freedom:  422 Total (i.e. Null);  416 Residual

     Null Deviance:  529.79 
 Residual Deviance:  509.69 
               AIC:  521.66 

>   print.haplo.glm(fit3.dom.rare, print.all.haplo=FALSE, digits=5)

Call:  haplo.glm(formula = y3 ~ geno3, family = binomial, data = my.data3, 
    na.action = "na.geno.keep", locus.label = label3, control = haplo.glm.control(haplo.base = 2, 
        haplo.effect = "dominant", haplo.freq.min = 0.32))

Coefficients:
(Intercept)        geno3  
   -0.42701     -0.46180  

Haplotypes:
           M1 M2 M3 hap.freq
geno3.rare  *  *  *  0.49789
haplo.base  1  1  2  0.50211

Degrees of Freedom:  422 Total (i.e. Null);  421 Residual

     Null Deviance:  529.79 
 Residual Deviance:  525.78 
               AIC:  529.74 

>   print.haplo.glm(fit3.rec, print.all.haplo=FALSE, digits=5)

Call:  haplo.glm(formula = y3 ~ geno3, family = binomial, data = my.data3, 
    na.action = "na.geno.keep", locus.label = label3, control = haplo.glm.control(haplo.min.count = 8, 
        haplo.effect = "recessive"))

Coefficients:
(Intercept)      geno3.1      geno3.3      geno3.4      geno3.5      geno3.6  
   -0.71516    -42.48770     -0.39207    -32.27643    -42.82951      0.64393  
 geno3.rare  
  -42.48537  

Haplotypes:
           M1 M2 M3  hap.freq
geno3.1     1  1  1 0.0160385
geno3.3     1  2  1 0.2851087
geno3.4     1  2  2 0.0539050
geno3.5     2  1  1 0.0534628
geno3.6     2  1  2 0.0875250
geno3.rare  *  *  * 0.0015802
haplo.base  1  1  2 0.5023799

Degrees of Freedom:  422 Total (i.e. Null);  416 Residual

     Null Deviance:  529.79 
 Residual Deviance:  525.35 
               AIC:  539.32 

>   print.haplo.glm(fit3.gaus, print.all.haplo=FALSE, digits=5)

Call:  haplo.glm(formula = gaus3 ~ geno3, family = gaussian, data = my.data3, 
    na.action = "na.geno.keep", locus.label = label3, control = haplo.glm.control(haplo.min.count = 8))

Coefficients:
(Intercept)      geno3.1      geno3.3      geno3.4      geno3.5      geno3.6  
   0.151476     0.335020    -0.111313    -0.173451     0.096508     0.122371  
 geno3.rare  
  -1.629050  

Haplotypes:
           M1 M2 M3  hap.freq
geno3.1     1  1  1 0.0160833
geno3.3     1  2  1 0.2853409
geno3.4     1  2  2 0.0540209
geno3.5     2  1  1 0.0531857
geno3.6     2  1  2 0.0879545
geno3.rare  *  *  * 0.0013971
haplo.base  1  1  2 0.5020176

Degrees of Freedom:  422 Total (i.e. Null);  416 Residual

     Null Deviance:  408.13 
 Residual Deviance:  397.1 
               AIC:  1189.7 

>   print.haplo.glm(fit3.gaus100, print.all.haplo=FALSE, digits=5)

Call:  haplo.glm(formula = gaus3.100 ~ geno3, family = gaussian, data = my.data3, 
    na.action = "na.geno.keep", locus.label = label3, control = haplo.glm.control(haplo.min.count = 8))

Coefficients:
(Intercept)      geno3.1      geno3.3      geno3.4      geno3.5      geno3.6  
    15.1476      33.5020     -11.1313     -17.3451       9.6508      12.2371  
 geno3.rare  
  -162.9050  

Haplotypes:
           M1 M2 M3  hap.freq
geno3.1     1  1  1 0.0160833
geno3.3     1  2  1 0.2853409
geno3.4     1  2  2 0.0540209
geno3.5     2  1  1 0.0531857
geno3.6     2  1  2 0.0879545
geno3.rare  *  *  * 0.0013971
haplo.base  1  1  2 0.5020176

Degrees of Freedom:  422 Total (i.e. Null);  416 Residual

     Null Deviance:  4081300 
 Residual Deviance:  3971000 
               AIC:  5085.7 

>   print.haplo.glm(fit.hla.bin, digits=5, print.all.haplo=FALSE)

Call:  haplo.glm(formula = y.bin ~ male + geno, family = binomial, data = my.data, 
    na.action = "na.geno.keep", locus.label = label, control = haplo.glm.control(haplo.min.count = 8))

Coefficients:
(Intercept)         male      geno.17      geno.34      geno.77      geno.78  
    1.54569     -0.48022     -0.72271      0.36414     -0.98838     -1.40925  
   geno.100     geno.138    geno.rare  
   -2.59073     -2.71564     -1.26098  

Haplotypes:
           DQB DRB  B hap.freq
geno.17     21   7 44 0.023033
geno.34     31   4 44 0.028430
geno.77     32   4 60 0.030567
geno.78     32   4 62 0.023543
geno.100    51   1 35 0.029771
geno.138    62   2  7 0.051806
geno.rare    *   *  * 0.708798
haplo.base  21   3  8 0.104052

Degrees of Freedom:  219 Total (i.e. Null);  211 Residual

     Null Deviance:  263.5 
 Residual Deviance:  233.46 
               AIC:  251.11 

>   print.haplo.glm(fit.hla.miss, digits=5, print.all.haplo=FALSE)

Call:  haplo.glm(formula = y.bin ~ male + geno.hla, family = binomial, 
    data = my.hla, na.action = "na.geno.keep", locus.label = label, 
    control = haplo.glm.control(haplo.min.count = 8))

Coefficients:
  (Intercept)           male    geno.hla.17    geno.hla.35    geno.hla.78  
      1.52097       -0.47405       -0.51326        0.37671       -0.98905  
  geno.hla.79   geno.hla.100   geno.hla.139  geno.hla.rare  
     -1.41182       -2.57827       -2.62599       -1.24913  

Haplotypes:
              DQB DRB  B hap.freq
geno.hla.17    21   7 44 0.019472
geno.hla.35    31   4 44 0.028640
geno.hla.78    32   4 60 0.030600
geno.hla.79    32   4 62 0.023991
geno.hla.100   51   1 35 0.030042
geno.hla.139   62   2  7 0.049912
geno.hla.rare   *   *  * 0.712334
haplo.base     21   3  8 0.105009

Degrees of Freedom:  217 Total (i.e. Null);  209 Residual

Subjects removed by NAs in y or x, or all NA in geno
  yxmiss genomiss 
       1        1 

     Null Deviance:  262.14 
 Residual Deviance:  232.38 
               AIC:  250.01 

>   print.haplo.glm(fit.hla.gaus.gender, print.all.haplo=FALSE, digits=5)

Call:  haplo.glm(formula = y ~ male + geno, family = gaussian, data = my.data, 
    na.action = "na.geno.keep", locus.label = label, control = haplo.glm.control(haplo.min.count = 5))

Coefficients:
(Intercept)         male      geno.13      geno.17      geno.34      geno.50  
   0.991752     0.128077     1.120830     0.271329    -0.257275     0.768684  
    geno.55      geno.69      geno.77      geno.78      geno.99     geno.100  
   0.453816     1.107967     0.233618     1.237015     0.479963     0.612457  
   geno.102     geno.138     geno.140     geno.143     geno.155     geno.162  
  -0.109670     0.984930     0.422381     0.021509     0.370595     1.367872  
   geno.165    geno.rare  
   0.117204     0.393562  

Haplotypes:
           DQB DRB  B hap.freq
geno.13     21   7  7 0.012435
geno.17     21   7 44 0.022917
geno.34     31   4 44 0.028612
geno.50     31  11 35 0.017023
geno.55     31  11 51 0.011431
geno.69     32   4  7 0.014962
geno.77     32   4 60 0.031899
geno.78     32   4 62 0.023926
geno.99     51   1 27 0.015002
geno.100    51   1 35 0.029977
geno.102    51   1 44 0.017632
geno.138    62   2  7 0.050956
geno.140    62   2 18 0.015374
geno.143    62   2 44 0.014135
geno.155    63   2  7 0.013636
geno.162    63  13  7 0.016062
geno.165    63  13 44 0.016510
geno.rare    *   *  * 0.543401
haplo.base  21   3  8 0.104110

Degrees of Freedom:  219 Total (i.e. Null);  200 Residual

     Null Deviance:  297.01 
 Residual Deviance:  252.33 
               AIC:  696.5 

>   print.haplo.glm(fit.hla.gaus.inter, digits=5, print.all.haplo=FALSE)

Call:  haplo.glm(formula = y ~ male * geno, family = gaussian, data = my.data, 
    na.action = "na.geno.keep", locus.label = label, control = haplo.glm.control(haplo.freq.min = 0.02))

Coefficients:
   (Intercept)            male         geno.17         geno.34         geno.77  
      0.975361        0.258057        0.144427       -0.171606        0.805227  
       geno.78        geno.100        geno.138       geno.rare    male:geno.17  
      0.495568        0.523104        1.157038        0.455471        0.508719  
  male:geno.34    male:geno.77    male:geno.78   male:geno.100   male:geno.138  
     -0.281374       -0.900835        1.263762        0.050737       -0.445869  
male:geno.rare  
     -0.097873  

Haplotypes:
           DQB DRB  B hap.freq
geno.17     21   7 44 0.023460
geno.34     31   4 44 0.028454
geno.77     32   4 60 0.030604
geno.78     32   4 62 0.024134
geno.100    51   1 35 0.030128
geno.138    62   2  7 0.050488
geno.rare    *   *  * 0.708632
haplo.base  21   3  8 0.104099

Degrees of Freedom:  219 Total (i.e. Null);  204 Residual

     Null Deviance:  297.01 
 Residual Deviance:  259.82 
               AIC:  694.93 

>   print.haplo.glm(fit.resp.hla, digits=5)

Call:  haplo.glm(formula = resp ~ geno, data = snap.data, trait.type = "gaussian")

Coefficients:
(Intercept)       geno.1       geno.4       geno.6       geno.7  
  2.0850405   -0.4357322    0.0187664    0.0027088   -0.2514169  

Haplotypes:
           loc.1 loc.2 loc.3 hap.freq
geno.1         1     1     1  0.12420
geno.4         2     1     1  0.17767
geno.6         2     2     1  0.10349
geno.7         2     2     2  0.21924
haplo.base     1     1     2  0.37540

Degrees of Freedom:  219 Total (i.e. Null);  215 Residual

     Null Deviance:  297.01 
 Residual Deviance:  285.33 
               AIC:  693.53 

>   print.haplo.glm(fit.respvar.hla, digits=5)

Call:  haplo.glm(formula = respvar ~ geno, data = snap.data, trait.type = "gaussian")

Coefficients:
(Intercept)       geno.1       geno.4       geno.6       geno.7  
  208.50405    -43.57322      1.87664      0.27088    -25.14169  

Haplotypes:
           loc.1 loc.2 loc.3 hap.freq
geno.1         1     1     1  0.12420
geno.4         2     1     1  0.17767
geno.6         2     2     1  0.10349
geno.7         2     2     2  0.21924
haplo.base     1     1     2  0.37540

Degrees of Freedom:  219 Total (i.e. Null);  215 Residual

     Null Deviance:  2970100 
 Residual Deviance:  2853300 
               AIC:  2719.8 

>   
> 
> proc.time()
   user  system elapsed 
 26.441   0.389  28.043 
