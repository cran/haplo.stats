
R version 4.0.2 (2020-06-22) -- "Taking Off Again"
Copyright (C) 2020 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ## package: haplo.stats
> ## test script: haplo.score
> 
> ## settings
> 
> verbose=TRUE
> Sys.setlocale("LC_ALL", "C")
[1] "LC_CTYPE=C;LC_NUMERIC=C;LC_TIME=C;LC_COLLATE=C;LC_MONETARY=C;LC_MESSAGES=en_US.UTF-8;LC_PAPER=en_US.UTF-8;LC_NAME=C;LC_ADDRESS=C;LC_TELEPHONE=C;LC_MEASUREMENT=en_US.UTF-8;LC_IDENTIFICATION=C"
> Sys.getlocale()
[1] "LC_CTYPE=C;LC_NUMERIC=C;LC_TIME=C;LC_COLLATE=C;LC_MONETARY=C;LC_MESSAGES=en_US.UTF-8;LC_PAPER=en_US.UTF-8;LC_NAME=C;LC_ADDRESS=C;LC_TELEPHONE=C;LC_MEASUREMENT=en_US.UTF-8;LC_IDENTIFICATION=C"
> 
> require(haplo.stats)
Loading required package: haplo.stats
Loading required package: arsenal
> 
> #library(haplo.stats, lib="/projects/bsi/gentools/R/lib214")
> 
> 
> if(verbose)
+   cat("prepare two datasets, one with char alleles, the other 3 loci from hla data\n")
prepare two datasets, one with char alleles, the other 3 loci from hla data
>   
> ## make ficticious data set with an intention of some trend in
> ## haplotypes having H-allele at locus-H with F-allele at locus-F
> geno.char <- matrix(c('F','f','g','G','h1','h1',
+                       'F','F','g','G','H','h1',
+                       'F','f','g','G','h2','h2',
+                       'f','f','g','G','h2','h1',
+                       'F','F','g','G','H','h2',
+                       'f','f','G','G','h1','h2',
+                       'F','f','G','g','h2','h2',
+                       'F','F','g','G','h1','z',
+                       'F','f','z','z','h1','h1',
+                       'F','f','G','g','h1','h2',
+                       'F','f','G','G','h1','h2',
+                       'F','F','g','G','h1','z',
+                       'F','f','z','z','h1','h1',
+                       'f','f','G','g','h1','h2'), nrow=14,byrow=T)
> 
> y.response <- c(2.0,4.5,1.8,2.1,5.2,1.3,3.4,2.5,2.2,1.9,2.1,1.2,3.0,1.9)
> y.pheno <- c(0,1,0,0,1,0,0,1,0,0,0,1,1,0)
> char.label <- c("F","G","H")
> 
> data(hla.demo)
> 
> hla.sub <- hla.demo[,c(1,2,3,4,17,18,21:24)]
> geno.hla <- hla.sub[,-c(1:4)]
> hla.resp <- hla.sub[,1]
> hla.respcat <- hla.sub[,2]
> hla.sex <- hla.sub[,3]
> hla.label=c("DQB","DRB","HLA.B")
> 
> seed <- c(33, 10, 39,  6, 16,  0, 40, 24, 12, 60,  7,  1)
> set.seed(seed)
> runif(10)
 [1] 0.44594048 0.39465031 0.48372887 0.91887596 0.84388144 0.51734962
 [7] 0.43712500 0.34319822 0.01551696 0.11799116
> 
> if(verbose) cat("character alleles, binary trait, additive and dominant\n")
character alleles, binary trait, additive and dominant
> 
> set.seed(seed)
> score.char.pheno.add <- haplo.score(y.pheno, geno.char, trait.type="binomial",
+                               locus.label=char.label, miss.val='z',
+                               offset = NA, x.adj = NA, min.count=4, simulate=FALSE,
+                               haplo.effect="additive", 
+                               sim.control = score.sim.control(),
+                               em.control = haplo.em.control())
> 
> print(score.char.pheno.add)
-------------------------------------------------------------------------------- 
                        Haplotype Effect Model: additive                         
-------------------------------------------------------------------------------- 
-------------------------------------------------------------------------------- 
                            Global Score Statistics                              
-------------------------------------------------------------------------------- 

global-stat = 7.64565, df = 3, p-val = 0.05393

-------------------------------------------------------------------------------- 
                           Haplotype-specific Scores                             
-------------------------------------------------------------------------------- 

     F G H  Hap-Freq Hap-Score p-val  
[1,] f G h2 0.2415   -2.73534  0.00623
[2,] F G h1 0.14326  0.92066   0.35723
[3,] F g h1 0.16268  2.11048   0.03482

> 
> 
> set.seed(seed)
> runif(10)
 [1] 0.44594048 0.39465031 0.48372887 0.91887596 0.84388144 0.51734962
 [7] 0.43712500 0.34319822 0.01551696 0.11799116
> set.seed(seed)
> score.char.pheno.dom <- haplo.score(y.pheno, geno.char, trait.type="binomial",
+                         locus.label=char.label, miss.val='z',
+                         offset = NA, x.adj=NA, min.count=4, simulate=FALSE,
+                         haplo.effect="dom",
+                         sim.control = score.sim.control(),
+                         em.control = haplo.em.control())
> 
> print(score.char.pheno.dom)
-------------------------------------------------------------------------------- 
                          Haplotype Effect Model: dom                            
-------------------------------------------------------------------------------- 
-------------------------------------------------------------------------------- 
                            Global Score Statistics                              
-------------------------------------------------------------------------------- 

global-stat = 7.64565, df = 3, p-val = 0.05393

-------------------------------------------------------------------------------- 
                           Haplotype-specific Scores                             
-------------------------------------------------------------------------------- 

     F G H  Hap-Freq Hap-Score p-val  
[1,] f G h2 0.2415   -2.73534  0.00623
[2,] F G h1 0.14326  0.92066   0.35723
[3,] F g h1 0.16268  2.11048   0.03482

>   
> if(verbose) cat("character alleles, gaussian trait\n")
character alleles, gaussian trait
> set.seed(seed)
> score.char.gaus <- haplo.score(y.response, geno.char, trait.type="gaussian",
+                         skip.haplo=.1,
+                         locus.label=char.label, miss.val="z",simulate=TRUE,
+                         sim.control=score.sim.control(min.sim=50, p.threshold=.25,
+                             max.sim=1000,verbose=FALSE),
+                         em.control = haplo.em.control())
> 
> print(score.char.gaus)
-------------------------------------------------------------------------------- 
                        Haplotype Effect Model: additive                         
-------------------------------------------------------------------------------- 
-------------------------------------------------------------------------------- 
                            Global Score Statistics                              
-------------------------------------------------------------------------------- 

global-stat = 5.20759, df = 5, p-val = 0.39107

-------------------------------------------------------------------------------- 
                       Global Simulation p-value Results                         
-------------------------------------------------------------------------------- 

Global sim. p-val =  0.44 
Max-Stat sim. p-val =  0.66 
Number of Simulations, Global:  50 , Max-Stat: 50

-------------------------------------------------------------------------------- 
                           Haplotype-specific Scores                             
-------------------------------------------------------------------------------- 

     F G H  Hap-Freq Hap-Score p-val   sim p-val
[1,] f G h2 0.2415   -1.35492  0.17544 0.18     
[2,] F G h1 0.14326  -0.87249  0.38294 0.42     
[3,] f g h1 0.13545  -0.63397  0.5261  0.58     
[4,] F g h1 0.16268  0.29721   0.7663  0.8      
[5,] F g h2 0.14042  1.25039   0.21116 0.26     

> 
> if(verbose) cat("hla data, gaussian trait and x.adj\n")
hla data, gaussian trait and x.adj
> set.seed(seed)
> score.hla.resp.adj <- haplo.score(hla.resp,geno.hla,trait.type="gaussian",
+                               locus.label=hla.label, miss.val=0, x.adj=hla.sex,
+                               simulate=FALSE, min.count=5)
>                               
> 
> print(score.hla.resp.adj)
-------------------------------------------------------------------------------- 
                        Haplotype Effect Model: additive                         
-------------------------------------------------------------------------------- 
-------------------------------------------------------------------------------- 
                            Global Score Statistics                              
-------------------------------------------------------------------------------- 

global-stat = 32.91534, df = 18, p-val = 0.01709

-------------------------------------------------------------------------------- 
                           Haplotype-specific Scores                             
-------------------------------------------------------------------------------- 

      DQB DRB HLA.B Hap-Freq Hap-Score p-val  
 [1,] 21  3   8     0.10421  -2.39918  0.01643
 [2,] 31  4   44    0.02849  -2.25911  0.02388
 [3,] 62  2   35    0.01149  -1.0621   0.28819
 [4,] 51  1   44    0.01772  -1.0064   0.31422
 [5,] 63  13  44    0.01655  -0.88319  0.37713
 [6,] 63  2   7     0.01364  -0.53278  0.59418
 [7,] 32  4   60    0.03061  -0.47835  0.6324 
 [8,] 21  7   44    0.02149  -0.44724  0.6547 
 [9,] 62  2   44    0.01378  -0.27576  0.78273
[10,] 62  2   18    0.01538  -0.19859  0.84258
[11,] 51  1   27    0.01439  -0.00401  0.9968 
[12,] 31  11  35    0.01753  0.51508   0.6065 
[13,] 51  1   35    0.03015  0.70983   0.47781
[14,] 32  4   7     0.02044  0.9406    0.34691
[15,] 21  7   7     0.01415  1.21797   0.22324
[16,] 63  13  7     0.01349  2.07975   0.03755
[17,] 32  4   62    0.02349  2.37016   0.01778
[18,] 62  2   7     0.04904  2.53596   0.01121

> 
> if(verbose) cat("hla data ordinal trait\n")
hla data ordinal trait
> set.seed(seed)
> score.hla.respcat <- haplo.score(hla.respcat, geno.hla, trait.type="ordinal",
+                            locus.label=hla.label, miss.val=0,
+                            simulate=FALSE, min.count=5,
+                              offset=NA, x.adj=NA)                     
> 
> print(score.hla.respcat)
-------------------------------------------------------------------------------- 
                        Haplotype Effect Model: additive                         
-------------------------------------------------------------------------------- 
-------------------------------------------------------------------------------- 
                            Global Score Statistics                              
-------------------------------------------------------------------------------- 

global-stat = 19.00536, df = 18, p-val = 0.39149

-------------------------------------------------------------------------------- 
                           Haplotype-specific Scores                             
-------------------------------------------------------------------------------- 

      DQB DRB HLA.B Hap-Freq Hap-Score p-val  
 [1,] 32  4   62    0.02349  -2.17153  0.02989
 [2,] 21  3   8     0.10421  -1.34215  0.17955
 [3,] 63  13  7     0.01349  -1.27538  0.20218
 [4,] 62  2   7     0.04904  -1.1646   0.24418
 [5,] 21  7   44    0.02149  -1.11045  0.2668 
 [6,] 62  2   18    0.01538  -0.37326  0.70896
 [7,] 32  4   7     0.02044  -0.32526  0.74498
 [8,] 63  2   7     0.01364  -0.31495  0.7528 
 [9,] 31  11  35    0.01753  -0.25543  0.79839
[10,] 62  2   44    0.01378  -0.24187  0.80888
[11,] 21  7   7     0.01415  -0.19675  0.84402
[12,] 32  4   60    0.03061  0.28      0.77948
[13,] 31  4   44    0.02849  0.32924   0.74197
[14,] 51  1   27    0.01439  0.54107   0.58846
[15,] 63  13  44    0.01655  0.97888   0.32764
[16,] 51  1   35    0.03015  0.99304   0.32069
[17,] 51  1   44    0.01772  1.23893   0.21537
[18,] 62  2   35    0.01149  1.95154   0.05099

> 
> set.seed(seed)
> score.hla.respcat.adj <- haplo.score(hla.respcat, geno.hla, trait.type="ordinal",
+                            locus.label=hla.label, miss.val=0,
+                            simulate=FALSE, min.count=5,
+                              offset=NA, x.adj=hla.sex)  
> 
> print(score.hla.respcat)
-------------------------------------------------------------------------------- 
                        Haplotype Effect Model: additive                         
-------------------------------------------------------------------------------- 
-------------------------------------------------------------------------------- 
                            Global Score Statistics                              
-------------------------------------------------------------------------------- 

global-stat = 19.00536, df = 18, p-val = 0.39149

-------------------------------------------------------------------------------- 
                           Haplotype-specific Scores                             
-------------------------------------------------------------------------------- 

      DQB DRB HLA.B Hap-Freq Hap-Score p-val  
 [1,] 32  4   62    0.02349  -2.17153  0.02989
 [2,] 21  3   8     0.10421  -1.34215  0.17955
 [3,] 63  13  7     0.01349  -1.27538  0.20218
 [4,] 62  2   7     0.04904  -1.1646   0.24418
 [5,] 21  7   44    0.02149  -1.11045  0.2668 
 [6,] 62  2   18    0.01538  -0.37326  0.70896
 [7,] 32  4   7     0.02044  -0.32526  0.74498
 [8,] 63  2   7     0.01364  -0.31495  0.7528 
 [9,] 31  11  35    0.01753  -0.25543  0.79839
[10,] 62  2   44    0.01378  -0.24187  0.80888
[11,] 21  7   7     0.01415  -0.19675  0.84402
[12,] 32  4   60    0.03061  0.28      0.77948
[13,] 31  4   44    0.02849  0.32924   0.74197
[14,] 51  1   27    0.01439  0.54107   0.58846
[15,] 63  13  44    0.01655  0.97888   0.32764
[16,] 51  1   35    0.03015  0.99304   0.32069
[17,] 51  1   44    0.01772  1.23893   0.21537
[18,] 62  2   35    0.01149  1.95154   0.05099

> 
> if(verbose) cat("snap SNP data with binary trait to test dominance,recessive\n")
snap SNP data with binary trait to test dominance,recessive
> snapDF <- read.table("snapData.csv",header=TRUE, sep=",")
> y.bin <- snapDF[,1]-1
> geno <- setupGeno(geno=snapDF[,-1])
> 
> set.seed(seed)
> y.ord <- sample(c("low", "med", "hi"), size=nrow(snapDF), prob=c(.3,.4,.3), replace=TRUE)
> #table(y.ord)
> geno.rec <- setupGeno(snapDF[,-c(1:9)])
> set.seed(seed)
> hcount=5
> ##additive, min.count set to hcount
> bin.snap.add <- haplo.score(y=y.bin, geno=geno.rec, trait.type="binomial",
+                      min.count=hcount,
+                      simulate=TRUE, haplo.effect="add",
+                      sim.control=score.sim.control(min.sim=200,max.sim=500))
> 
> print(bin.snap.add)
-------------------------------------------------------------------------------- 
                          Haplotype Effect Model: add                            
-------------------------------------------------------------------------------- 
-------------------------------------------------------------------------------- 
                            Global Score Statistics                              
-------------------------------------------------------------------------------- 

global-stat = 14.64014, df = 4, p-val = 0.00551

-------------------------------------------------------------------------------- 
                       Global Simulation p-value Results                         
-------------------------------------------------------------------------------- 

Global sim. p-val =  0.002 
Max-Stat sim. p-val =  0.04 
Number of Simulations, Global:  500 , Max-Stat: 500

-------------------------------------------------------------------------------- 
                           Haplotype-specific Scores                             
-------------------------------------------------------------------------------- 

     loc-1 loc-2 loc-3 Hap-Freq Hap-Score p-val   sim p-val
[1,] 1     1     2     0.37639  -1.97705  0.04804 0.038    
[2,] 2     1     1     0.17814  -1.64787  0.09938 0.096    
[3,] 1     1     1     0.12274  0.166     0.86816 0.882    
[4,] 2     2     1     0.10452  2.14605   0.03187 0.024    
[5,] 2     2     2     0.21821  2.78766   0.00531 0.014    

> 
> ## additive
> set.seed(seed)
> bin.snap.dom <- haplo.score(y=y.bin, geno=geno.rec, trait.type="binomial",
+                  min.count=hcount, simulate=TRUE, haplo.effect="dom",
+                  sim.control=score.sim.control(min.sim=200,max.sim=500))
> 
> print(bin.snap.dom)
-------------------------------------------------------------------------------- 
                          Haplotype Effect Model: dom                            
-------------------------------------------------------------------------------- 
-------------------------------------------------------------------------------- 
                            Global Score Statistics                              
-------------------------------------------------------------------------------- 

global-stat = 15.94484, df = 5, p-val = 0.007

-------------------------------------------------------------------------------- 
                       Global Simulation p-value Results                         
-------------------------------------------------------------------------------- 

Global sim. p-val =  0.008 
Max-Stat sim. p-val =  0.054 
Number of Simulations, Global:  500 , Max-Stat: 500

-------------------------------------------------------------------------------- 
                           Haplotype-specific Scores                             
-------------------------------------------------------------------------------- 

     loc-1 loc-2 loc-3 Hap-Freq Hap-Score p-val   sim p-val
[1,] 2     1     1     0.17814  -1.50448  0.13246 0.132    
[2,] 1     1     2     0.37639  -1.15854  0.24665 0.246    
[3,] 1     1     1     0.12274  0.67606   0.499   0.52     
[4,] 2     2     1     0.10452  2.38633   0.01702 0.016    
[5,] 2     2     2     0.21821  2.55803   0.01053 0.024    

> 
> ## recessive
> set.seed(seed)
> bin.snap.rec <- haplo.score(y=y.bin, geno=geno.rec, trait.type="binomial",
+                        min.count=hcount, simulate=TRUE,
+                        haplo.effect="rec",
+                        sim.control=score.sim.control(min.sim=200,max.sim=500))
> 
> print(bin.snap.rec)
-------------------------------------------------------------------------------- 
                          Haplotype Effect Model: rec                            
-------------------------------------------------------------------------------- 
-------------------------------------------------------------------------------- 
                            Global Score Statistics                              
-------------------------------------------------------------------------------- 

global-stat = 9.04791, df = 3, p-val = 0.02866

-------------------------------------------------------------------------------- 
                       Global Simulation p-value Results                         
-------------------------------------------------------------------------------- 

Global sim. p-val =  0.03493 
Max-Stat sim. p-val =  0.0655 
Number of Simulations, Global:  458 , Max-Stat: 458

-------------------------------------------------------------------------------- 
                           Haplotype-specific Scores                             
-------------------------------------------------------------------------------- 

     loc-1 loc-2 loc-3 Hap-Freq Hap-Score p-val   sim p-val
[1,] 1     1     2     0.37639  -2.24407  0.02483 0.01528  
[2,] 2     1     1     0.17814  -1.10376  0.2697  0.28821  
[3,] 2     2     2     0.21821  1.74409   0.08114 0.05895  

> 
> ## ordinal, additive
> 
> set.seed(seed)
> ord.snap.add <- haplo.score(y=y.ord, geno=geno.rec, trait.type="ordinal",
+                     min.count=hcount, simulate=TRUE, haplo.effect="add",
+                     sim.control=score.sim.control(min.sim=200,max.sim=500))       
> 
> print(ord.snap.add)
-------------------------------------------------------------------------------- 
                          Haplotype Effect Model: add                            
-------------------------------------------------------------------------------- 
-------------------------------------------------------------------------------- 
                            Global Score Statistics                              
-------------------------------------------------------------------------------- 

global-stat = 6.46263, df = 4, p-val = 0.16716

-------------------------------------------------------------------------------- 
                       Global Simulation p-value Results                         
-------------------------------------------------------------------------------- 

Global sim. p-val =  0.185 
Max-Stat sim. p-val =  0.275 
Number of Simulations, Global:  200 , Max-Stat: 200

-------------------------------------------------------------------------------- 
                           Haplotype-specific Scores                             
-------------------------------------------------------------------------------- 

     loc-1 loc-2 loc-3 Hap-Freq Hap-Score p-val   sim p-val
[1,] 1     1     1     0.12274  -1.81525  0.06948 0.09     
[2,] 2     1     1     0.17814  -1.20029  0.23003 0.235    
[3,] 1     1     2     0.37639  0.42687   0.66947 0.64     
[4,] 2     2     1     0.10452  0.94294   0.34571 0.345    
[5,] 2     2     2     0.21821  1.60922   0.10757 0.105    

> 
> set.seed(seed)
> ord.snap.add.adj <- haplo.score(y=y.ord, geno=geno.rec, trait.type="ordinal",
+                  min.count=hcount, simulate=TRUE, haplo.effect="add", x.adj=hla.sex,
+                  sim.control=score.sim.control(min.sim=200,max.sim=500))
> 
> print(ord.snap.add.adj)
-------------------------------------------------------------------------------- 
                          Haplotype Effect Model: add                            
-------------------------------------------------------------------------------- 
-------------------------------------------------------------------------------- 
                            Global Score Statistics                              
-------------------------------------------------------------------------------- 

global-stat = 6.48952, df = 4, p-val = 0.16545

-------------------------------------------------------------------------------- 
                       Global Simulation p-value Results                         
-------------------------------------------------------------------------------- 

Global sim. p-val =  0.185 
Max-Stat sim. p-val =  0.275 
Number of Simulations, Global:  200 , Max-Stat: 200

-------------------------------------------------------------------------------- 
                           Haplotype-specific Scores                             
-------------------------------------------------------------------------------- 

     loc-1 loc-2 loc-3 Hap-Freq Hap-Score p-val   sim p-val
[1,] 1     1     1     0.12274  -1.80461  0.07114 0.085    
[2,] 2     1     1     0.17814  -1.20986  0.22633 0.23     
[3,] 1     1     2     0.37639  0.41315   0.6795  0.645    
[4,] 2     2     1     0.10452  0.97633   0.3289  0.325    
[5,] 2     2     2     0.21821  1.60727   0.108   0.105    

> 
> 
> 
> 
> 
> proc.time()
   user  system elapsed 
 21.487   0.498  23.003 
