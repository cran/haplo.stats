
R version 2.15.0 (2012-03-30)
Copyright (C) 2012 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: x86_64-unknown-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> 
> ## package: haplo.stats
> ## test script: haplo.em
> 
> ## settings
> verbose=TRUE
> 
> require(haplo.stats)
Loading required package: haplo.stats
> 
> Sys.setlocale("LC_ALL", "C")
[1] "LC_CTYPE=C;LC_NUMERIC=C;LC_TIME=C;LC_COLLATE=C;LC_MONETARY=C;LC_MESSAGES=en_US.UTF-8;LC_PAPER=C;LC_NAME=C;LC_ADDRESS=C;LC_TELEPHONE=C;LC_MEASUREMENT=en_US.UTF-8;LC_IDENTIFICATION=C"
> Sys.getlocale()
[1] "LC_CTYPE=C;LC_NUMERIC=C;LC_TIME=C;LC_COLLATE=C;LC_MONETARY=C;LC_MESSAGES=en_US.UTF-8;LC_PAPER=C;LC_NAME=C;LC_ADDRESS=C;LC_TELEPHONE=C;LC_MEASUREMENT=en_US.UTF-8;LC_IDENTIFICATION=C"
> 
> if(verbose) cat("prepare two datasets, one with char alleles, the other 3 loci from hla data\n")
prepare two datasets, one with char alleles, the other 3 loci from hla data
>   
>   # make ficticious data set with an intention of some trend in
>   # haplotypes having H-allele at locus-H with F-allele at locus-F
>   geno.char <- matrix(c('F','f','g','G','h1','h1',
+                      'F','F','g','G','H','h1',
+                      'F','f','g','G','h2','h2',
+                      'f','f','g','G','h2','h1',
+                      'F','F','g','G','H','h2',
+                      'f','f','G','G','h1','h2',
+                      'F','f','G','g','h2','h2',
+                      'F','F','g','G','h1','z',
+                      'F','f','z','z','h1','h1',
+                      'F','f','G','g','h1','h2',
+                      'F','f','G','G','h1','h2',
+                      'F','F','g','G','h1','z',
+                      'F','f','z','z','h1','h1',
+                      'f','f','G','g','h1','h2'), nrow=14,byrow=T)
> char.label <- c("F","G","H")
> 
> data(hla.demo)
>   
> hla.sub <- hla.demo[,c(1,2,3,4,17,18,21:24)]
> geno.hla <- hla.sub[,-c(1:4)]
> hla.label=c("DQB","DRB","HLA.B")
> 
> seed <- c(33, 10, 39,  6, 16,  0, 40, 24, 12, 60,  7,  1)
> 
> if(verbose) cat("character alleles\n")
character alleles
> 
> geno.char.recode <- setupGeno(geno.char, miss.val="z")
> 
> geno.char.recode
      loc-1.a1 loc-1.a2 loc-2.a1 loc-2.a2 loc-3.a1 loc-3.a2
 [1,]        1        2        2        1        2        2
 [2,]        1        1        2        1        1        2
 [3,]        1        2        2        1        3        3
 [4,]        2        2        2        1        3        2
 [5,]        1        1        2        1        1        3
 [6,]        2        2        1        1        2        3
 [7,]        1        2        1        2        3        3
 [8,]        1        1        2        1        2       NA
 [9,]        1        2       NA       NA        2        2
[10,]        1        2        1        2        2        3
[11,]        1        2        1        1        2        3
[12,]        1        1        2        1        2       NA
[13,]        1        2       NA       NA        2        2
[14,]        2        2        1        2        2        3
attr(,"class")
[1] "model.matrix"
attr(,"unique.alleles")
attr(,"unique.alleles")[[1]]
[1] "F" "f"

attr(,"unique.alleles")[[2]]
[1] "G" "g"

attr(,"unique.alleles")[[3]]
[1] "H"  "h1" "h2"

> 
> set.seed(seed)
> em.char <- haplo.em(geno.char, miss.val='z',locus.label=char.label,
+                     control = haplo.em.control())
> 
> print.haplo.em(em.char, digits=5)
================================================================================ 
                                   Haplotypes                                    
================================================================================ 
   F G  H hap.freq
1  F G  H  0.08935
2  F G h1  0.14326
3  F G h2  0.00000
4  F g  H  0.00000
5  F g h1  0.16268
6  F g h2  0.14042
7  f G h1  0.08733
8  f G h2  0.24150
9  f g h1  0.13545
10 f g h2  0.00000
================================================================================ 
                                    Details                                      
================================================================================ 
lnlike =  -37.1622 
lr stat for no LD =  10.98653 , df =  2 , p-val =  0.00411 
> summary(em.char, digits=5, show.haplo=TRUE)
================================================================================ 
             Subjects: Haplotype Codes and Posterior Probabilities               
================================================================================ 
     subj.id hap1.F hap1.G hap1.H hap2.F hap2.G hap2.H posterior
5          1      F      g     h1      f      G     h1   0.42305
2          1      F      G     h1      f      g     h1   0.57695
2.1        2      F      G     h1      F      g      H   0.00000
1          2      F      G      H      F      g     h1   1.00000
6          3      F      g     h2      f      G     h2   1.00000
7          4      f      G     h1      f      g     h2   0.00000
8          4      f      G     h2      f      g     h1   1.00000
1.1        5      F      G      H      F      g     h2   1.00000
7.1        6      f      G     h1      f      G     h2   1.00000
6.1        7      F      g     h2      f      G     h2   1.00000
1.2        8      F      G      H      F      g     h1   0.25095
2.2        8      F      G     h1      F      g      H   0.00000
2.3        8      F      G     h1      F      g     h1   0.40212
3          8      F      G     h2      F      g     h1   0.00000
2.4        8      F      G     h1      F      g     h2   0.34694
2.5        9      F      G     h1      f      G     h1   0.18357
2.6        9      F      G     h1      f      g     h1   0.28450
5.1        9      F      g     h1      f      G     h1   0.20861
5.2        9      F      g     h1      f      g     h1   0.32331
2.7       10      F      G     h1      f      g     h2   0.00000
5.3       10      F      g     h1      f      G     h2   0.76212
3.1       10      F      G     h2      f      g     h1   0.00000
6.2       10      F      g     h2      f      G     h1   0.23788
2.8       11      F      G     h1      f      G     h2   1.00000
3.2       11      F      G     h2      f      G     h1   0.00000
1.3       12      F      G      H      F      g     h1   0.25095
2.9       12      F      G     h1      F      g      H   0.00000
2.10      12      F      G     h1      F      g     h1   0.40212
3.3       12      F      G     h2      F      g     h1   0.00000
2.11      12      F      G     h1      F      g     h2   0.34694
2.12      13      F      G     h1      f      G     h1   0.18357
2.13      13      F      G     h1      f      g     h1   0.28450
5.4       13      F      g     h1      f      G     h1   0.20861
5.5       13      F      g     h1      f      g     h1   0.32331
7.2       14      f      G     h1      f      g     h2   0.00000
8.1       14      f      G     h2      f      g     h1   1.00000
================================================================================ 
                     Number of haplotype pairs: max vs used                      
================================================================================ 
   
x   1 2 4 5
  1 1 0 0 0
  2 3 5 0 0
  4 0 0 3 0
  5 0 0 0 2
> summary.haplo.em(em.char, digits=5)
================================================================================ 
             Subjects: Haplotype Codes and Posterior Probabilities               
================================================================================ 
   subj.id hap1code hap2code posterior
1        1        5        7   0.42305
2        1        2        9   0.57695
3        2        2        4   0.00000
4        2        1        5   1.00000
5        3        6        8   1.00000
6        4        7       10   0.00000
7        4        8        9   1.00000
8        5        1        6   1.00000
9        6        7        8   1.00000
10       7        6        8   1.00000
11       8        1        5   0.25095
12       8        2        4   0.00000
13       8        2        5   0.40212
14       8        3        5   0.00000
15       8        2        6   0.34694
16       9        2        7   0.18357
17       9        2        9   0.28450
18       9        5        7   0.20861
19       9        5        9   0.32331
20      10        2       10   0.00000
21      10        5        8   0.76212
22      10        3        9   0.00000
23      10        6        7   0.23788
24      11        2        8   1.00000
25      11        3        7   0.00000
26      12        1        5   0.25095
27      12        2        4   0.00000
28      12        2        5   0.40212
29      12        3        5   0.00000
30      12        2        6   0.34694
31      13        2        7   0.18357
32      13        2        9   0.28450
33      13        5        7   0.20861
34      13        5        9   0.32331
35      14        7       10   0.00000
36      14        8        9   1.00000
================================================================================ 
                     Number of haplotype pairs: max vs used                      
================================================================================ 
   
x   1 2 4 5
  1 1 0 0 0
  2 3 5 0 0
  4 0 0 3 0
  5 0 0 0 2
> 
>   
> if(verbose) cat("hla data, 3 loci\n")
hla data, 3 loci
> set.seed(seed)
> em.hla3 <- haplo.em(geno.hla, locus.label=hla.label, miss.val=0,
+                     control = haplo.em.control())
> 
> print.haplo.em(em.hla3, digits=5)
================================================================================ 
                                   Haplotypes                                    
================================================================================ 
    DQB DRB HLA.B hap.freq
1    21   1     8  0.00232
2    21   2     7  0.00227
3    21   2    18  0.00227
4    21   3     8  0.10421
5    21   3    18  0.00229
6    21   3    35  0.00565
7    21   3    44  0.00360
8    21   3    45  0.00227
9    21   3    49  0.00227
10   21   3    57  0.00238
11   21   3    70  0.00227
12   21   4    62  0.00455
13   21   7     7  0.01415
14   21   7    13  0.01076
15   21   7    18  0.00493
16   21   7    35  0.00236
17   21   7    44  0.02149
18   21   7    50  0.00455
19   21   7    57  0.00227
20   21   7    62  0.00767
21   21   8    18  0.00227
22   21   8    63  0.00227
23   21   9    51  0.00227
24   21  10     8  0.00227
25   31   1    27  0.00455
26   31   2    44  0.00228
27   31   2    57  0.00227
28   31   3     8  0.00455
29   31   4    13  0.00515
30   31   4    14  0.00227
31   31   4    27  0.00495
32   31   4    35  0.00455
33   31   4    41  0.00227
34   31   4    44  0.02849
35   31   4    60  0.00686
36   31   7    44  0.00455
37   31   7    61  0.00227
38   31   8    35  0.00227
39   31   8    39  0.00227
40   31   8    45  0.00227
41   31   8    52  0.00227
42   31   8    60  0.00455
43   31  11     7  0.00233
44   31  11    18  0.00466
45   31  11    27  0.00618
46   31  11    35  0.01753
47   31  11    37  0.00699
48   31  11    38  0.00699
49   31  11    44  0.01028
50   31  11    49  0.00466
51   31  11    51  0.01113
52   31  11    56  0.00233
53   31  11    60  0.00237
54   31  11    61  0.00466
55   31  11    62  0.00612
56   31  13     8  0.00465
57   31  13    14  0.00227
58   31  13    41  0.00455
59   31  13    57  0.00217
60   31  14    58  0.00248
61   31  14    63  0.00248
62   32   1     7  0.00227
63   32   1    35  0.00222
64   32   1    62  0.00000
65   32   2    44  0.00287
66   32   3    35  0.00232
67   32   3    51  0.00227
68   32   4     7  0.02044
69   32   4     8  0.00469
70   32   4    14  0.00455
71   32   4    35  0.00000
72   32   4    44  0.00237
73   32   4    45  0.00167
74   32   4    51  0.00227
75   32   4    55  0.00249
76   32   4    60  0.03061
77   32   4    62  0.02349
78   32   7    39  0.00455
79   32   7    57  0.00455
80   32   8     7  0.00682
81   32   9    51  0.00227
82   32  10    39  0.00227
83   33   7     7  0.00455
84   33   7    57  0.00682
85   33   9     8  0.00227
86   33   9    46  0.00227
87   33   9    48  0.00227
88   33   9    60  0.00682
89   33  10    51  0.00227
90   42   4    35  0.00227
91   42   8    18  0.00227
92   42   8    55  0.00227
93   42   8    60  0.00227
94   51   1     8  0.00468
95   51   1    14  0.00233
96   51   1    18  0.00247
97   51   1    27  0.01439
98   51   1    35  0.03015
99   51   1    39  0.00233
100  51   1    44  0.01772
101  51   1    47  0.00233
102  51   1    48  0.00233
103  51   1    51  0.00752
104  51   1    58  0.00233
105  51   1    60  0.00233
106  51   2    51  0.00227
107  51   4    27  0.00227
108  51   8     7  0.00455
109  51  10     7  0.00294
110  51  10    14  0.00227
111  51  10    18  0.00227
112  51  10    35  0.00161
113  51  10    37  0.00455
114  51  14    56  0.00248
115  52   2    27  0.00227
116  52   2    42  0.00227
117  52   2    56  0.00455
118  52   2    62  0.00455
119  52   4    39  0.00227
120  52   8    60  0.00227
121  53   8    57  0.00227
122  53   9    51  0.00227
123  53  14    35  0.00248
124  53  14    38  0.00496
125  53  14    44  0.00248
126  53  14    51  0.00248
127  53  14    55  0.00496
128  61   2    44  0.00227
129  61   2    60  0.00227
130  61   2    61  0.00455
131  61   2    62  0.00227
132  61   4    52  0.00227
133  61   8    44  0.00227
134  61  13    39  0.00227
135  61  13    44  0.00227
136  62   2     7  0.04904
137  62   2     8  0.00456
138  62   2    18  0.01538
139  62   2    27  0.00455
140  62   2    35  0.01149
141  62   2    44  0.01378
142  62   2    60  0.00514
143  62   4     7  0.00228
144  62   4    45  0.00287
145  62   7    57  0.00227
146  62   8    35  0.00227
147  62   8    37  0.00227
148  62  10    51  0.00227
149  62  11    55  0.00233
150  62  13    51  0.00227
151  62  14    51  0.00248
152  63   2     7  0.01364
153  63   2    44  0.00227
154  63   4    48  0.00227
155  63   8    18  0.00227
156  63   8    58  0.00227
157  63  10    44  0.00227
158  63  13     7  0.01349
159  63  13    35  0.00305
160  63  13    38  0.00709
161  63  13    44  0.01655
162  63  13    55  0.00451
163  63  13    60  0.00575
164  63  13    62  0.00866
165  64   2    51  0.00227
166  64  11    38  0.00233
167  64  13     7  0.00954
168  64  13    14  0.00455
169  64  13    35  0.00673
170  64  13    44  0.00236
171  64  13    51  0.00227
172  64  13    57  0.00227
173  64  13    60  0.00410
174  64  13    61  0.00227
175  64  13    63  0.00682
================================================================================ 
                                    Details                                      
================================================================================ 
lnlike =  -1846.904 
lr stat for no LD =  585.1133 , df =  124 , p-val =  0 
>  
> if(verbose) cat("snap SNP data, unphased\n")
snap SNP data, unphased
> snapDF <- read.table("snapData.csv",header=TRUE, sep=",", stringsAsFactors=FALSE)
> 
> geno.snap <- setupGeno(geno=snapDF[,-1])
> set.seed(seed)
> em.snap <- haplo.em(geno=geno.snap)
> 
> print(em.snap, digits=5)
================================================================================ 
                                   Haplotypes                                    
================================================================================ 
   loc-1 loc-2 loc-3 loc-4 loc-5 loc-6 loc-7 hap.freq
1      1     1     1     1     1     1     1  0.05224
2      1     1     1     1     1     1     2  0.10459
3      1     1     1     1     2     1     1  0.05135
4      1     1     1     1     2     2     1  0.04930
5      1     1     1     1     2     2     2  0.08467
6      1     1     1     2     1     1     2  0.06263
7      1     1     1     2     2     2     2  0.01625
8      1     1     2     1     1     1     1  0.01442
9      1     1     2     1     1     1     2  0.03359
10     1     1     2     1     2     1     1  0.02221
11     1     1     2     1     2     2     1  0.02690
12     1     1     2     1     2     2     2  0.01553
13     1     1     2     2     1     1     2  0.02063
14     1     1     2     2     2     2     2  0.01659
15     1     2     1     1     1     1     1  0.00939
16     1     2     1     1     1     1     2  0.01357
17     1     2     1     1     2     1     1  0.01453
18     1     2     1     1     2     2     2  0.00042
19     1     2     1     2     1     1     2  0.01404
20     1     2     1     2     2     2     2  0.00357
21     1     2     2     1     1     1     1  0.02140
22     1     2     2     1     1     1     2  0.02601
23     1     2     2     1     2     1     1  0.03226
24     1     2     2     1     2     2     1  0.01598
25     1     2     2     1     2     2     2  0.00000
26     1     2     2     2     1     1     2  0.02312
27     1     2     2     2     2     2     2  0.01539
28     2     1     1     1     1     1     1  0.00548
29     2     1     1     1     1     1     2  0.01909
30     2     1     1     1     2     1     1  0.03244
31     2     1     1     1     2     2     2  0.01361
32     2     1     1     2     1     1     2  0.03394
33     2     1     1     2     2     2     2  0.00816
34     2     2     1     1     1     1     1  0.01587
35     2     2     1     1     1     1     2  0.02942
36     2     2     1     1     2     1     1  0.02506
37     2     2     1     1     2     2     1  0.01688
38     2     2     1     1     2     2     2  0.01136
39     2     2     1     2     2     2     2  0.02814
================================================================================ 
                                    Details                                      
================================================================================ 
lnlike =  -1210.329 
lr stat for no LD =  139.7221 , df =  30 , p-val =  0 
> 
> 
> if(verbose) cat("Check Phase against SNaP data, phased\n")
Check Phase against SNaP data, phased
> snapfile <- "snap.sim.phased.dat"
> source("snapFUN.s")
> set.seed(seed)
> block1.phase <- checkPhase(snapfile, blocknum=1)
> set.seed(seed)
> block2.phase <- checkPhase(snapfile, blocknum=2)
> 
> 
> print(block1.phase[[2]])
  haplotype      em.freq snap.freq
1  11112211 5.515622e-02    0.0545
2  11121112 3.348438e-01    0.3355
3  11122122 1.565000e-01    0.1565
4  12212211 1.553438e-01    0.1560
5  12221112 9.815621e-02    0.0975
6  21112212 1.120000e-01    0.1120
7  21221112 8.800000e-02    0.0880
8  22212212 1.644158e-09    0.0000
> print(block1.phase[[1]][1:50,])  # long output 1120 lines
   subj   emhap1   emhap2         post snaphap1 snaphap2
1     1 11121112 21221112 1.000000e+00 21221112 11121112
2     2 11122122 12212211 1.000000e+00 12212211 11122122
3     3 11121112 11121112 1.000000e+00 11121112 11121112
4     4 12212211 12212211 1.000000e+00 12212211 12212211
5     5 11121112 12212211 9.057297e-01 12212211 11121112
6     5 11112211 12221112 9.427027e-02 12212211 11121112
7     6 11121112 21221112 1.000000e+00 21221112 11121112
8     7 12212211 21221112 1.000000e+00 12212211 21221112
9     8 11112211 11122122 1.000000e+00 11112211 11122122
10    9 11121112 11122122 1.000000e+00 11121112 11122122
11   10 12212211 12221112 1.000000e+00 12212211 12221112
12   11 11121112 11122122 1.000000e+00 11121112 11122122
13   12 12221112 21221112 1.000000e+00 21221112 12221112
14   13 11121112 12212211 9.057297e-01 11121112 12212211
15   13 11112211 12221112 9.427027e-02 11121112 12212211
16   14 11112211 11121112 1.000000e+00 11121112 11112211
17   15 11112211 21112212 1.000000e+00 21112212 11112211
18   16 12221112 21112212 9.999999e-01 12221112 21112212
19   16 11121112 22212212 1.097747e-07 12221112 21112212
20   17 11122122 12212211 1.000000e+00 12212211 11122122
21   18 11121112 11121112 1.000000e+00 11121112 11121112
22   19 11121112 12221112 1.000000e+00 12221112 11121112
23   20 11121112 11121112 1.000000e+00 11121112 11121112
24   21 21112212 21221112 1.000000e+00 21221112 21112212
25   22 11121112 11122122 1.000000e+00 11121112 11122122
26   23 11121112 12212211 9.057297e-01 11121112 12212211
27   23 11112211 12221112 9.427027e-02 11121112 12212211
28   24 11121112 11121112 1.000000e+00 11121112 11121112
29   25 11122122 21112212 1.000000e+00 11122122 21112212
30   26 11121112 11121112 1.000000e+00 11121112 11121112
31   27 11122122 12212211 1.000000e+00 11122122 12212211
32   28 12212211 21221112 1.000000e+00 12212211 21221112
33   29 11122122 12221112 1.000000e+00 11122122 12221112
34   30 11121112 21112212 1.000000e+00 21112212 11121112
35   31 11121112 11122122 1.000000e+00 11122122 11121112
36   32 11122122 21112212 1.000000e+00 11122122 21112212
37   33 11122122 21221112 1.000000e+00 11122122 21221112
38   34 11121112 11122122 1.000000e+00 11122122 11121112
39   35 21112212 21221112 1.000000e+00 21221112 21112212
40   36 11121112 12221112 1.000000e+00 11121112 12221112
41   37 12212211 12212211 1.000000e+00 12212211 12212211
42   38 11121112 11121112 1.000000e+00 11121112 11121112
43   39 11121112 11121112 1.000000e+00 11121112 11121112
44   40 12212211 21112212 1.000000e+00 21112212 12212211
45   40 11112211 22212212 1.142559e-08 21112212 12212211
46   41 11121112 12212211 9.057297e-01 12212211 11121112
47   41 11112211 12221112 9.427027e-02 12212211 11121112
48   42 12212211 21221112 1.000000e+00 12212211 21221112
49   43 11121112 11122122 1.000000e+00 11121112 11122122
50   44 12212211 21112212 1.000000e+00 21112212 12212211
> print(block2.phase[[2]])
   haplotype      em.freq snap.freq
1 1111221221 5.200000e-02    0.0520
2 1121221221 1.965000e-01    0.1965
3 1221112211 9.650000e-02    0.0965
4 2112211122 2.105000e-01    0.2105
5 2112221122 5.400000e-02    0.0540
6 2211122211 9.300000e-02    0.0930
7 2221111222 1.010000e-01    0.1010
8 2221121222 1.885982e-10    0.0000
9 2221222221 1.965000e-01    0.1965
> 
> 
> 
> 
> 
> proc.time()
   user  system elapsed 
 38.970   0.248  39.461 
